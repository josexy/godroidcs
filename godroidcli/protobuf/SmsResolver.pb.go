// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: proto/SmsResolver.proto

package protobuf

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_proto_SmsResolver_proto protoreflect.FileDescriptor

var file_proto_SmsResolver_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x1a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xbd, 0x01, 0x0a, 0x0b, 0x53, 0x6d, 0x73,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x53, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x6d,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x12,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x69, 0x72, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x41, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e,
	0x6a, 0x6f, 0x78, 0x72, 0x61, 0x79, 0x73, 0x2e, 0x67, 0x6f, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x73,
	0x76, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x42, 0x10, 0x53, 0x6d, 0x73,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x01, 0x5a,
	0x0a, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var file_proto_SmsResolver_proto_goTypes = []interface{}{
	(*Empty)(nil),       // 0: protobuf.Empty
	(*String)(nil),      // 1: protobuf.String
	(*StringPair)(nil),  // 2: protobuf.StringPair
	(*StringList)(nil),  // 3: protobuf.StringList
	(*SmsInfoList)(nil), // 4: protobuf.SmsInfoList
}
var file_proto_SmsResolver_proto_depIdxs = []int32{
	0, // 0: protobuf.SmsResolver.GetAllBasicSmsInfo:input_type -> protobuf.Empty
	1, // 1: protobuf.SmsResolver.GetSmsInfoList:input_type -> protobuf.String
	2, // 2: protobuf.SmsResolver.SendSms:input_type -> protobuf.StringPair
	3, // 3: protobuf.SmsResolver.GetAllBasicSmsInfo:output_type -> protobuf.StringList
	4, // 4: protobuf.SmsResolver.GetSmsInfoList:output_type -> protobuf.SmsInfoList
	0, // 5: protobuf.SmsResolver.SendSms:output_type -> protobuf.Empty
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_SmsResolver_proto_init() }
func file_proto_SmsResolver_proto_init() {
	if File_proto_SmsResolver_proto != nil {
		return
	}
	file_proto_Message_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_SmsResolver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_SmsResolver_proto_goTypes,
		DependencyIndexes: file_proto_SmsResolver_proto_depIdxs,
	}.Build()
	File_proto_SmsResolver_proto = out.File
	file_proto_SmsResolver_proto_rawDesc = nil
	file_proto_SmsResolver_proto_goTypes = nil
	file_proto_SmsResolver_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SmsResolverClient is the client API for SmsResolver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SmsResolverClient interface {
	GetAllBasicSmsInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*StringList, error)
	GetSmsInfoList(ctx context.Context, in *String, opts ...grpc.CallOption) (*SmsInfoList, error)
	SendSms(ctx context.Context, in *StringPair, opts ...grpc.CallOption) (*Empty, error)
}

type smsResolverClient struct {
	cc grpc.ClientConnInterface
}

func NewSmsResolverClient(cc grpc.ClientConnInterface) SmsResolverClient {
	return &smsResolverClient{cc}
}

func (c *smsResolverClient) GetAllBasicSmsInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*StringList, error) {
	out := new(StringList)
	err := c.cc.Invoke(ctx, "/protobuf.SmsResolver/GetAllBasicSmsInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smsResolverClient) GetSmsInfoList(ctx context.Context, in *String, opts ...grpc.CallOption) (*SmsInfoList, error) {
	out := new(SmsInfoList)
	err := c.cc.Invoke(ctx, "/protobuf.SmsResolver/GetSmsInfoList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smsResolverClient) SendSms(ctx context.Context, in *StringPair, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.SmsResolver/SendSms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SmsResolverServer is the server API for SmsResolver service.
type SmsResolverServer interface {
	GetAllBasicSmsInfo(context.Context, *Empty) (*StringList, error)
	GetSmsInfoList(context.Context, *String) (*SmsInfoList, error)
	SendSms(context.Context, *StringPair) (*Empty, error)
}

// UnimplementedSmsResolverServer can be embedded to have forward compatible implementations.
type UnimplementedSmsResolverServer struct {
}

func (*UnimplementedSmsResolverServer) GetAllBasicSmsInfo(context.Context, *Empty) (*StringList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllBasicSmsInfo not implemented")
}
func (*UnimplementedSmsResolverServer) GetSmsInfoList(context.Context, *String) (*SmsInfoList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSmsInfoList not implemented")
}
func (*UnimplementedSmsResolverServer) SendSms(context.Context, *StringPair) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendSms not implemented")
}

func RegisterSmsResolverServer(s *grpc.Server, srv SmsResolverServer) {
	s.RegisterService(&_SmsResolver_serviceDesc, srv)
}

func _SmsResolver_GetAllBasicSmsInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsResolverServer).GetAllBasicSmsInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.SmsResolver/GetAllBasicSmsInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsResolverServer).GetAllBasicSmsInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmsResolver_GetSmsInfoList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsResolverServer).GetSmsInfoList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.SmsResolver/GetSmsInfoList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsResolverServer).GetSmsInfoList(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmsResolver_SendSms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StringPair)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsResolverServer).SendSms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.SmsResolver/SendSms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsResolverServer).SendSms(ctx, req.(*StringPair))
	}
	return interceptor(ctx, in, info, handler)
}

var _SmsResolver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.SmsResolver",
	HandlerType: (*SmsResolverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllBasicSmsInfo",
			Handler:    _SmsResolver_GetAllBasicSmsInfo_Handler,
		},
		{
			MethodName: "GetSmsInfoList",
			Handler:    _SmsResolver_GetSmsInfoList_Handler,
		},
		{
			MethodName: "SendSms",
			Handler:    _SmsResolver_SendSms_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/SmsResolver.proto",
}
