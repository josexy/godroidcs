// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: proto/CallLogResolver.proto

package protobuf

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_proto_CallLogResolver_proto protoreflect.FileDescriptor

var file_proto_CallLogResolver_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x43, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x1a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xcf, 0x01, 0x0a,
	0x0f, 0x43, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72,
	0x12, 0x45, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x4c, 0x6f,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x45,
	0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x6a, 0x6f, 0x78, 0x72, 0x61, 0x79, 0x73, 0x2e, 0x67, 0x6f,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x73, 0x76, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x72, 0x42, 0x14, 0x43, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x01, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_proto_CallLogResolver_proto_goTypes = []interface{}{
	(*Empty)(nil),               // 0: protobuf.Empty
	(*String)(nil),              // 1: protobuf.String
	(*CallLogMetaInfoList)(nil), // 2: protobuf.CallLogMetaInfoList
	(*CallLogInfoList)(nil),     // 3: protobuf.CallLogInfoList
}
var file_proto_CallLogResolver_proto_depIdxs = []int32{
	0, // 0: protobuf.CallLogResolver.GetAllCallLogInfo:input_type -> protobuf.Empty
	1, // 1: protobuf.CallLogResolver.GetCallLogInfo:input_type -> protobuf.String
	1, // 2: protobuf.CallLogResolver.DeleteCallLog:input_type -> protobuf.String
	2, // 3: protobuf.CallLogResolver.GetAllCallLogInfo:output_type -> protobuf.CallLogMetaInfoList
	3, // 4: protobuf.CallLogResolver.GetCallLogInfo:output_type -> protobuf.CallLogInfoList
	0, // 5: protobuf.CallLogResolver.DeleteCallLog:output_type -> protobuf.Empty
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_CallLogResolver_proto_init() }
func file_proto_CallLogResolver_proto_init() {
	if File_proto_CallLogResolver_proto != nil {
		return
	}
	file_proto_Message_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_CallLogResolver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_CallLogResolver_proto_goTypes,
		DependencyIndexes: file_proto_CallLogResolver_proto_depIdxs,
	}.Build()
	File_proto_CallLogResolver_proto = out.File
	file_proto_CallLogResolver_proto_rawDesc = nil
	file_proto_CallLogResolver_proto_goTypes = nil
	file_proto_CallLogResolver_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CallLogResolverClient is the client API for CallLogResolver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CallLogResolverClient interface {
	GetAllCallLogInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CallLogMetaInfoList, error)
	GetCallLogInfo(ctx context.Context, in *String, opts ...grpc.CallOption) (*CallLogInfoList, error)
	DeleteCallLog(ctx context.Context, in *String, opts ...grpc.CallOption) (*Empty, error)
}

type callLogResolverClient struct {
	cc grpc.ClientConnInterface
}

func NewCallLogResolverClient(cc grpc.ClientConnInterface) CallLogResolverClient {
	return &callLogResolverClient{cc}
}

func (c *callLogResolverClient) GetAllCallLogInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CallLogMetaInfoList, error) {
	out := new(CallLogMetaInfoList)
	err := c.cc.Invoke(ctx, "/protobuf.CallLogResolver/GetAllCallLogInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *callLogResolverClient) GetCallLogInfo(ctx context.Context, in *String, opts ...grpc.CallOption) (*CallLogInfoList, error) {
	out := new(CallLogInfoList)
	err := c.cc.Invoke(ctx, "/protobuf.CallLogResolver/GetCallLogInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *callLogResolverClient) DeleteCallLog(ctx context.Context, in *String, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.CallLogResolver/DeleteCallLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CallLogResolverServer is the server API for CallLogResolver service.
type CallLogResolverServer interface {
	GetAllCallLogInfo(context.Context, *Empty) (*CallLogMetaInfoList, error)
	GetCallLogInfo(context.Context, *String) (*CallLogInfoList, error)
	DeleteCallLog(context.Context, *String) (*Empty, error)
}

// UnimplementedCallLogResolverServer can be embedded to have forward compatible implementations.
type UnimplementedCallLogResolverServer struct {
}

func (*UnimplementedCallLogResolverServer) GetAllCallLogInfo(context.Context, *Empty) (*CallLogMetaInfoList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCallLogInfo not implemented")
}
func (*UnimplementedCallLogResolverServer) GetCallLogInfo(context.Context, *String) (*CallLogInfoList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCallLogInfo not implemented")
}
func (*UnimplementedCallLogResolverServer) DeleteCallLog(context.Context, *String) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCallLog not implemented")
}

func RegisterCallLogResolverServer(s *grpc.Server, srv CallLogResolverServer) {
	s.RegisterService(&_CallLogResolver_serviceDesc, srv)
}

func _CallLogResolver_GetAllCallLogInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CallLogResolverServer).GetAllCallLogInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.CallLogResolver/GetAllCallLogInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CallLogResolverServer).GetAllCallLogInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CallLogResolver_GetCallLogInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CallLogResolverServer).GetCallLogInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.CallLogResolver/GetCallLogInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CallLogResolverServer).GetCallLogInfo(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _CallLogResolver_DeleteCallLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CallLogResolverServer).DeleteCallLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.CallLogResolver/DeleteCallLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CallLogResolverServer).DeleteCallLog(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

var _CallLogResolver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.CallLogResolver",
	HandlerType: (*CallLogResolverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllCallLogInfo",
			Handler:    _CallLogResolver_GetAllCallLogInfo_Handler,
		},
		{
			MethodName: "GetCallLogInfo",
			Handler:    _CallLogResolver_GetCallLogInfo_Handler,
		},
		{
			MethodName: "DeleteCallLog",
			Handler:    _CallLogResolver_DeleteCallLog_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/CallLogResolver.proto",
}
